# roles/blob_indexer/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_blob_indexer_namespace }}"
    - path: "{{ openio_blob_indexer_sysconfig_dir }}/{{ openio_blob_indexer_servicename }}"
    - path: "{{ openio_blob_indexer_volume }}"
    - path: "/var/log/oio/sds/{{ openio_blob_indexer_namespace }}/{{ openio_blob_indexer_servicename }}"
      owner: "{{ syslog_user }}"
      mode: "0750"
  tags: configure

- name: Generate configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: openio
    group: openio
    mode: 0644
  with_items:
    - src: "blob_indexer.conf.j2"
      dest: "{{ openio_blob_indexer_sysconfig_dir }}/\
        {{ openio_blob_indexer_servicename }}/{{ openio_blob_indexer_servicename }}.conf"
    - src: "gridinit_blob_indexer.conf.j2"
      dest: "{{ openio_blob_indexer_gridinit_dir }}/{{ openio_blob_indexer_gridinit_file_prefix }}\
        {{ openio_blob_indexer_servicename }}.conf"
  register: _blob_indexer_conf
  tags: configure

- name: "restart blob_indexer to apply the new configuration"
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{ openio_blob_indexer_namespace }}-{{ openio_blob_indexer_servicename }}
  register: _restart_blob_indexer
  when:
    - _blob_indexer_conf is changed
    - not openio_blob_indexer_provision_only
  tags: configure

- block:
    - name: "Ensure blob_indexer is started"
      command: gridinit_cmd start {{ openio_blob_indexer_namespace }}-{{ openio_blob_indexer_servicename }}
      register: _start_blob_indexer
      changed_when: '"Success" in _start_blob_indexer.stdout'
      when:
        - not openio_blob_indexer_provision_only
        - _restart_blob_indexer is skipped
      tags: configure
  when: openio_bootstrap | d(false)

...
